name: Install MonetDB
description: Install MonetDB and make it ready for use
inputs:
  version:
    description: "Version of MonetDB to install"
    required: false
    default: Latest
outputs:
  prefix:
    description: directory prefix under which everything has been installed
    value: ${{ steps.set_output.outputs.prefix }}
  bindir:
    description: directory under $prefix where binaries has been installed
    value: ${{ steps.set_output.outputs.bindir }}
  includedir:
    description: directory under $prefix where include files has been installed
    value: ${{ steps.set_output.outputs.includedir }}
  libdir:
    description: directory under $prefix where libraries has been installed
    value: ${{ steps.set_output.outputs.libdir }}
  dynsuffix:
    description: "the extension used for shared libraries on this platform: so, dylib or dll"
    value: ${{ steps.set_output.outputs.dynsuffix }}
  versionnumber:
    description: "installed version of MonetDB, for example 11.51.5"
    value: ${{ steps.versionlookup.outputs.numeric }}

# input: version
# output: version_number

runs:
  using: "composite"
  steps:

  # this step has outputs 'numeric'
  - id: versionlookup
    run: |
      python3 "$GITHUB_ACTION_PATH"/lookup-version.py "${{ inputs.version }}" ${{ runner.os == 'Windows' && '--msi' || '' }} >"$GITHUB_OUTPUT"
      cat "$GITHUB_OUTPUT"
    shell: bash

  # This step leaves GITHUB_OUTPUT in the file github.output
  - name: Linux Package Install
    if: runner.os == 'Linux'
    run: ${{ github.action_path }}/install-linux-bin.sh "${{ steps.versionlookup.outputs.numeric }}"
    shell: bash

  # This step leaves GITHUB_OUTPUT in the file github.output
  - name: MacOS Homebrew Install
    if: runner.os == 'macOS'
    run: ${{ github.action_path }}/install-macos-bin.sh "${{ steps.versionlookup.outputs.numeric }}"
    shell: bash

  # This step leaves GITHUB_OUTPUT in the file github.output.
  # It also updates $GITHUP_PATH.
  - name: Windows MSI Install
    if: runner.os == 'Windows'
    run: ${{ github.action_path}}\install-windows-bin.ps1 "${{ steps.versionlookup.outputs.main_msi }}" "${{ steps.versionlookup.outputs.odbc_msi }}"
    shell: pwsh

  - name: Check whether the server is really running
    run: python3 "$GITHUB_ACTION_PATH"/connect-to-socket.py
    shell: bash

  - name: Create .monetdb
    run: |
      echo user=monetdb >> $HOME/.monetdb
      echo password=monetdb >> $HOME/.monetdb
    shell: bash

  - name: Create a scratch venv and activate it in further steps
    run: |
      python3 -m venv "$GITHUB_ACTION_PATH"/venv
      echo "$GITHUB_ACTION_PATH"/venv/bin >>$GITHUB_PATH
    shell: bash

  - name: Verify that the correct version has been installed
    run: |
      python -m pip install pymonetdb
      python verify-with-pymonetdb.py monetdb:///demo --expect-version="${{ steps.versionlookup.outputs.numeric }}"
    shell: bash

  # This step picks up the github.output file generated
  # by the earlier install step
  - name: Communicate prefix, bindir, libdir, includedir and dynsuffix
    id: set_output
    run: |
      cat github.output # should have been generated by install-*-bin.sh
      cat github.output >>$GITHUB_OUTPUT
    shell: bash